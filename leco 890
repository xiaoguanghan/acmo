class Solution:
    def findAndReplacePattern(self, words, pattern):
        """
        :type words: List[str]
        :type pattern: str
        :rtype: List[str]
        """
        # one dict solution
        def match(word):
            m = {}
            for i,j in zip(pattern,word):
                if m.setdefault(i,j)!= j: # return m[i] if it's not null, otherwise return j  
                    return False
            return len(set(m.values())) == len(m.values()) # make sure their size are equal
        return list(filter(match,words))
        
        # two dicts solution
        def match(word):
            m1,m2 = {},{}
            for i,j in zip(word,pattern):
                if i not in m1: m1[i] = j
                if j not in m2: m2[j] = i
                if m1[i]!=j or m2[j]!=i:
                    return False
            return True
        return list(filter(match,words))
      
